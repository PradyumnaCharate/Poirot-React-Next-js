



get-Initial-Props:-
 1.getStaticProps or getServerSideProps instead of getInitialProps. 
 These data fetching methods allow you to have a granular choice between static generation and server-side rendering.

2.getInitialProps enables server-side rendering in a page and allows you 
to do initial data population, it means sending the page with the data already populated from the server. 
This is especially useful for SEO.

3.getInitialProps will disable Automatic Static Optimization.

4.getInitialProps is an async function that can be added to any page as a static method. 


Automatic Static Optimization.
Next.js automatically determines that a page is static (can be prerendered) 
if it has no blocking data requirements. This determination is made by the absence of 
getServerSideProps and getInitialProps in the page.

This feature allows Next.js to emit hybrid applications that contain both server-rendered 
and statically generated pages.

Statically generated pages are still reactive: Next.js will hydrate your application client-side to 
give it full interactivity.

One of the main benefits of this feature is that optimized pages require 
no server-side computation, and can be instantly streamed to the end-user from multiple CDN locations. 
The result is an ultra fast loading experience for your users.

How it works
If getServerSideProps or getInitialProps is present in a page, 
Next.js will switch to render the page on-demand, per-request (meaning Server-Side Rendering).

If the above is not the case, Next.js will statically optimize your page automatically 
by prerendering the page to static HTML.





Server Side vs Client Side

Server-side pros:
Search engines can crawl the site for better SEO.
The initial page load is faster.
Great for static sites.

Server-side cons:
Frequent server requests.
An overall slow page rendering.
Full page reloads.
Non-rich site interactions.

Client-side pros:
Rich site interactions
Fast website rendering after the initial load.
Great for web applications.
Robust selection of JavaScript libraries.

Client-side cons:
Low SEO if not implemented correctly.
Initial load might require more time.
In most cases, requires an external library.

When to use server-side rendering
An application has very simple UI with fewer pages/features
An application has less dynamic data
Read preference of the site is more than write
The focus is not on rich site and has few users
 
 When to use client-side rendering
An application has very complex UI with many pages/features
An application has large and dynamic data
Write preference of the site is more than reading
The focus is on rich site and a huge number of users